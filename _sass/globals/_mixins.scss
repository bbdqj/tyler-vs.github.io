/*------------------------------------*\
  #_mixins.scss
\*------------------------------------*/

// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

// respond-to();

@mixin respond-to( $breakpoint-name ) {
  // Check if key exists in the map provided
  @if map-has-key($breakpoints-map, $breakpoint-name) {
    // Print a media query based on the value.
    @media #{ inspect( map-get( $breakpoints-map, $breakpoint-name ) ) } {
      @content;
    }
  } @else {
    @warn 'Error, no value could be retrieved from `#{$breakpoint}`. Please make sure specific value is defined in `$breakpoints` config map.';
  }
}


// get-color();

@function get-color($key: 'primary') {
  @return map-get($scheme-colors, $key);
}

